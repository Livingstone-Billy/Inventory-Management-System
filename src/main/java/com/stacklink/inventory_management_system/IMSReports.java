package com.stacklink.inventory_management_system;

import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Font;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import static org.apache.pdfbox.pdmodel.font.PDType1Font.*;

public class IMSReports {

    IMSDatabase database = new IMSDatabase();
    DialogWindow dialog = new DialogWindow();

    PointOfSale sale = new PointOfSale();

    public void generateDailyReport(){
        Stage primaryStage = new Stage(StageStyle.UTILITY);
        primaryStage.initModality(Modality.APPLICATION_MODAL);

        AnchorPane root = new AnchorPane();

        GridPane grid = new GridPane();
        grid.setVgap(15);
        grid.setHgap(15);

        AnchorPane.setTopAnchor(grid, 20.0);
        AnchorPane.setLeftAnchor(grid, 50.0);

        Label username = new Label("Username");
        username.setFont(Font.font(18.0));
        TextField usernameField = new TextField();
        usernameField.setFont(Font.font(20.0));
        grid.add(username, 0, 0);
        grid.add(usernameField, 1,0);

        Label date_R = new Label("Date");
        date_R.setFont(Font.font(18.0));
        DatePicker datePicker = new DatePicker();
        datePicker.setMinSize(50,41);
        grid.add(date_R, 0,1);
        grid.add(datePicker, 1,1);

        Button generateReport = new Button("Generate Report");
        generateReport.setFont(Font.font(20.0));
        generateReport.setOnAction(event -> {
            String path = generateDailyReport(
                    String.valueOf(datePicker.getValue()), usernameField.getText()
            );
            sale.openPDF(path);

            dialog.showDialog("Daily Business Report", "" +
                    "Report Generated, go to "+path);
            primaryStage.close();
        });

        AnchorPane.setLeftAnchor(generateReport, 150.0);
        AnchorPane.setBottomAnchor(generateReport, 50.0);

        root.getChildren().addAll(grid, generateReport);
        Scene scene = new Scene(root, 544, 240, true);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Daily Report Generation");
        primaryStage.showAndWait();
    }

    public String generateDailyReport(String date, String username){
        PDDocument DailyReport = new PDDocument();

        PDPage reportPage = new PDPage(new PDRectangle());
        DailyReport.addPage(reportPage);
        PDPage newPage = DailyReport.getPage(0);
        String reportPath;
        try {
            PDPageContentStream cs = new PDPageContentStream(DailyReport,newPage);

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 20);
            cs.newLineAtOffset(200, 750);
            cs.showText("Kakamega Phone Care Centre");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ITALIC, 17);
            cs.newLineAtOffset(200, 720);
            cs.showText("Dealers in Phone Repairs and Spares");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ITALIC, 17);
            cs.newLineAtOffset(200, 690);
            cs.showText("PO Box 36 - 50100  Kakamega");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ITALIC, 17);
            cs.newLineAtOffset(200, 660);
            cs.showText("Tel Phone No +254790901424");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_BOLD_ITALIC, 20);
            cs.newLineAtOffset(180, 600);
            cs.showText("Daily Business Report for"+database.formatDate(date));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.setLeading(20f);
            cs.newLineAtOffset(60, 530);
            cs.showText("Generated By: ");
            cs.newLine();
            cs.showText("Phone No: ");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.setLeading(20f);
            cs.newLineAtOffset(170, 530);
            cs.showText(username);
            cs.newLine();
            cs.showText("+254758288943");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 18);
            cs.newLineAtOffset(270, 450);
            cs.showText("Phones");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(80, 430);
            cs.showText("Phones Repaired");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(200, 430);
            cs.showText("Amount Spent");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(310, 430);
            cs.showText("Amount Received");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(470, 430);
            cs.showText("Profit");
            cs.endText();

            ArrayList<Integer> phoneRepairedData = database.getDailyPhoneRepairedData(date);

            //Phones Repaired
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(80, 410);
            cs.showText(String.valueOf(phoneRepairedData.get(0)));
            cs.endText();

//            Amount Spent
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(200, 410);
            cs.showText(String.valueOf(phoneRepairedData.get(1)));
            cs.endText();

//            Amount Received
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(310, 410);
            cs.showText(String.valueOf(phoneRepairedData.get(2)));
            cs.endText();

//            Profit
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(470, 410);
            cs.showText(String.valueOf(phoneRepairedData.get(3)));
            cs.endText();


            cs.beginText();
            cs.setFont(TIMES_ROMAN, 18);
            cs.newLineAtOffset(270, 350);
            cs.showText("Inventory Data");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(80, 320);
            cs.showText("Remaining Stock");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(200, 320);
            cs.showText("Daily Sales");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(310, 320);
            cs.showText("Amount Received");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(470, 320);
            cs.showText("Profit");
            cs.endText();

            ArrayList<Integer> sales_data = database.getInventoryDailyData(date);
//            Remaining Stock
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(80, 300);
            cs.showText(String.valueOf(sales_data.get(0)));
            cs.endText();

//           Daily Sales
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(200, 300);
            cs.showText(String.valueOf(sales_data.get(1)));
            cs.endText();

//            Amount Received
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(310, 300);
            cs.showText(String.valueOf(sales_data.get(2)));
            cs.endText();
//            Profit
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(470, 300);
            cs.showText(String.valueOf(sales_data.get(3)));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 20);
            cs.newLineAtOffset(270, 250);
            cs.showText("Summary");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 17);
            cs.setLeading(20f);
            cs.newLineAtOffset(60, 200);
            cs.showText("Daily Expenses:");
            cs.newLine();
            cs.showText("Total Amount Received:");
            cs.newLine();
            cs.showText("Total Amount Spent:");
            cs.newLine();
            cs.showText("Daily Profit:");
            cs.newLine();
            cs.showText("Approved by: ");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 17);
            cs.setLeading(20f);
            cs.newLineAtOffset(270, 200);
            int totalExpenses = database.getRevenueOfTask("Expenses", "cost", date);
            cs.showText(String.valueOf(totalExpenses));
            cs.newLine();
            int amountReceivedTotal = phoneRepairedData.get(2) + sales_data.get(2);
            cs.showText(String.valueOf(amountReceivedTotal));
            cs.newLine();
            int totalAmountSpent = phoneRepairedData.get(1) + totalExpenses;
            cs.showText(String.valueOf(totalAmountSpent));
            cs.newLine();
            int totalProfit = amountReceivedTotal - totalAmountSpent;
            cs.showText(String.valueOf(totalProfit));
            cs.newLine();
            cs.showText("Management");
            cs.endText();

            cs.beginText();
            cs.newLineAtOffset(200, 30);
            cs.setLeading(20f);
            cs.setFont(TIMES_BOLD_ITALIC, 14);
            cs.showText("Software Built by Stack Billy");
            cs.newLine();
            cs.showText("Tel No  +254758288943");
            cs.endText();

            cs.close();

            String home = System.getProperty("user.home");
            String reportDIR = home+"\\Documents\\Report";
            File file = new File(reportDIR);
            reportPath = reportDIR+"\\"+database.formatDate(date)+" report.pdf";
            if (!file.exists()){
                if (file.mkdir()){
                    DailyReport.save(reportPath);
                    DailyReport.close();
                }
            }else if (file.exists()) {
                DailyReport.save(reportPath);
                DailyReport.close();
            }else {
                dialog.showDialog("Error", "Error saving " + file.getName());
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return reportPath;
    }
}
