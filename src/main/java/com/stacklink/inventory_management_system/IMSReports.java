package com.stacklink.inventory_management_system;

import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Objects;

import static org.apache.pdfbox.pdmodel.font.PDType1Font.*;

public class IMSReports {

    IMSDatabase database = new IMSDatabase();
    DialogWindow dialog = new DialogWindow();

    PointOfSale sale = new PointOfSale();

    public void generateDailyReport(){
        Stage primaryStage = new Stage(StageStyle.UTILITY);
        primaryStage.initModality(Modality.APPLICATION_MODAL);

        AnchorPane root = new AnchorPane();

        GridPane grid = new GridPane();
        grid.setVgap(15);
        grid.setHgap(15);

        AnchorPane.setTopAnchor(grid, 20.0);
        AnchorPane.setLeftAnchor(grid, 50.0);

        Label username = new Label("Username");
        username.setFont(Font.font(18.0));
        TextField usernameField = new TextField();
        usernameField.setFont(Font.font(20.0));
        grid.add(username, 0, 0);
        grid.add(usernameField, 1,0);

        Label date_R = new Label("Date");
        date_R.setFont(Font.font(18.0));
        DatePicker datePicker = new DatePicker();
        datePicker.setMinSize(50,41);
        grid.add(date_R, 0,1);
        grid.add(datePicker, 1,1);

        Button generateReport = new Button("Generate Report");
        generateReport.setFont(Font.font(20.0));
        generateReport.setOnAction(event -> {
            String path = generateDailyReport(
                    String.valueOf(datePicker.getValue()), usernameField.getText()
            );
            sale.openPDF(path);

            dialog.showDialog("Daily Business Report", String.format("Report Generated, go to %s", path));
            primaryStage.close();
        });

        AnchorPane.setLeftAnchor(generateReport, 150.0);
        AnchorPane.setBottomAnchor(generateReport, 50.0);

        root.getChildren().addAll(grid, generateReport);
        Scene scene = new Scene(root, 544, 240, true);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Daily Report Generation");
        primaryStage.showAndWait();
    }

    public String generateDailyReport(String date, String username){
        PDDocument DailyReport = new PDDocument();

        PDPage reportPage = new PDPage(new PDRectangle());
        DailyReport.addPage(reportPage);
        PDPage newPage = DailyReport.getPage(0);
        String reportPath;
        ArrayList<String> businessData = database.getBusinessInfo();
        try {
            PDPageContentStream cs = new PDPageContentStream(DailyReport,newPage);

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 20);
            cs.newLineAtOffset(205, 750);
            cs.showText(businessData.get(0));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ITALIC, 17);
            cs.newLineAtOffset(200, 720);
            cs.showText(businessData.get(1));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ITALIC, 17);
            cs.newLineAtOffset(200, 690);
            cs.showText(businessData.get(2));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ITALIC, 17);
            cs.newLineAtOffset(200, 660);
            cs.showText("Tel Phone No "+businessData.get(3));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_BOLD_ITALIC, 20);
            cs.newLineAtOffset(180, 600);
            cs.showText("Daily Business Report for "+database.formatDate(date));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.setLeading(20f);
            cs.newLineAtOffset(60, 530);
            cs.showText("Generated By: ");
            cs.newLine();
            cs.showText("Phone No: ");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.setLeading(20f);
            cs.newLineAtOffset(170, 530);
            cs.showText(username);
            cs.newLine();
            cs.showText("+254758288943");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 18);
            cs.newLineAtOffset(270, 450);
            cs.showText("Inventory Data");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(80, 420);
            cs.showText("Remaining Stock");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(200, 420);
            cs.showText("Daily Sales");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(310, 420);
            cs.showText("Amount Received");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 14);
            cs.newLineAtOffset(470, 420);
            cs.showText("Profit");
            cs.endText();

            ArrayList<Integer> sales_data = database.getInventoryDailyData(date);
//            Remaining Stock
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(80, 400);
            cs.showText(String.valueOf(sales_data.get(0)));
            cs.endText();

//           Daily Sales
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(200, 400);
            cs.showText(String.valueOf(sales_data.get(1)));
            cs.endText();

//            Amount Received
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(310, 400);
            cs.showText(String.valueOf(sales_data.get(2)));
            cs.endText();
//            Profit
            cs.beginText();
            cs.setFont(TIMES_ROMAN, 12);
            cs.setLeading(20f);
            cs.newLineAtOffset(470, 400);
            cs.showText(String.valueOf(sales_data.get(3)));
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 20);
            cs.newLineAtOffset(270, 350);
            cs.showText("Summary");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 17);
            cs.setLeading(20f);
            cs.newLineAtOffset(60, 300);
            cs.showText("Daily Expenses:");
            cs.newLine();
            cs.showText("Total Amount Received:");
            cs.newLine();
            cs.showText("Total Amount Spent:");
            cs.newLine();
            cs.showText("Daily Profit:");
            cs.newLine();
            cs.showText("Approved by: ");
            cs.endText();

            cs.beginText();
            cs.setFont(TIMES_ROMAN, 17);
            cs.setLeading(20f);
            cs.newLineAtOffset(270, 300);
            int totalExpenses = database.getRevenueOfTask("Expenses", "cost", date);
            cs.showText(String.valueOf(totalExpenses));
            cs.newLine();
            int amountReceivedTotal =  sales_data.get(2);
            cs.showText(String.valueOf(amountReceivedTotal));
            cs.newLine();
            cs.showText(String.valueOf(totalExpenses));
            cs.newLine();
            int totalProfit = sales_data.get(3) - totalExpenses;
            cs.showText(String.valueOf(totalProfit));
            cs.newLine();
            cs.showText("Management");
            cs.endText();

            cs.beginText();
            cs.newLineAtOffset(200, 50);
            cs.setLeading(20f);
            cs.setFont(TIMES_BOLD_ITALIC, 14);
            cs.showText("Software Built by Stack Billy");
            cs.newLine();
            cs.showText("Tel No  +254758288943");
            cs.endText();

            cs.close();

            String home = System.getProperty("user.home");
            String reportDIR = home+"\\Documents\\Report";
            File file = new File(reportDIR);
            reportPath = reportDIR+"\\"+database.formatDate(date)+" report.pdf";
            if (!file.exists()){
                if (file.mkdir()){
                    DailyReport.save(reportPath);
                    DailyReport.close();
                }
            }else if (file.exists()) {
                DailyReport.save(reportPath);
                DailyReport.close();
            }else {
                dialog.showDialog("Error", "Error saving " + file.getName());
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return reportPath;
    }

    public AnchorPane IMSReportsPage(){
        ArrayList<String> businessInfo = database.getBusinessInfo();
        AnchorPane root = new AnchorPane();

        Button genReport = new Button("Daily Report");
        genReport.setFont(Font.font(20.0));
        genReport.setBackground(new Background(new BackgroundFill(Color.CRIMSON, CornerRadii.EMPTY, Insets.EMPTY)));
        genReport.setOnAction((e) -> generateDailyReport());
        genReport.setTextFill(Color.WHITE);

        GridPane grid = new GridPane();
        grid.setVgap(12.0);
        grid.setHgap(12.0);
        grid.setPadding(new Insets(20.0,20.0,20.0,20.0));

        Label title = new Label("Business Information");
        title.setFont(Font.font("Impact", FontWeight.MEDIUM, 20));
        title.setTextFill(Color.WHITE);
        title.underlineProperty().setValue(true);
        AnchorPane.setTopAnchor(title, 10.0);
        AnchorPane.setLeftAnchor(title, 130.0);

        Label name = new Label("Name: ");
        name.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.ITALIC, 16));
        grid.add(name, 0,0);
        Label vName = new Label(businessInfo.get(0));
        vName.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.REGULAR, 16));
        grid.add(vName, 1,0);

        Label tagline = new Label("Tagline: ");
        tagline.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.ITALIC, 16));
        grid.add(tagline, 0,1);
        Label vTagline = new Label(businessInfo.get(1));
        vTagline.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.REGULAR, 16));
        grid.add(vTagline, 1,1);

        Label address = new Label("Location: ");
        address.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.ITALIC, 16));
        grid.add(address, 0,2);
        Label vAddress = new Label(businessInfo.get(2));
        vAddress.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.REGULAR, 16));
        grid.add(vAddress,1,2);

        Label phoneNo = new Label("Tel: ");
        phoneNo.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.ITALIC, 16));
        grid.add(phoneNo, 0,3);
        Label vPhoneNo = new Label(businessInfo.get(3));
        vPhoneNo.setFont(Font.font("Verdana", FontWeight.MEDIUM, FontPosture.REGULAR, 16));
        grid.add(vPhoneNo, 1,3);

        Button edit = new Button("Edit");
        edit.setTextFill(Color.WHITE);
        edit.setFont(Font.font(18.0));
        edit.setPrefSize(100.0, 40.0);
        edit.setBackground(new Background(new BackgroundFill(Color.DARKSLATEBLUE, CornerRadii.EMPTY, Insets.EMPTY)));
        grid.add(edit, 1,4);
        edit.setOnAction((e) -> editBusinessInformation());

        AnchorPane gridPane = new AnchorPane();
        gridPane.setBackground(new Background(new BackgroundFill(Color.INDIANRED, CornerRadii.EMPTY,Insets.EMPTY)));
        gridPane.setPrefHeight(200.0);
        gridPane.setPrefWidth(250);
        AnchorPane.setTopAnchor(grid, 40.0);
        gridPane.getChildren().addAll(title, grid);

        ImageView icon = new ImageView(new Image(Objects.requireNonNull(InventoryApplication.class.
                getResourceAsStream("/assets/report.png"))));
        icon.setFitWidth(35);
        icon.setFitHeight(35);
        Label reportL = new Label("REPORT PAGE", icon);
        reportL.setContentDisplay(ContentDisplay.LEFT);
        reportL.setFont(Font.font("Verdana", FontWeight.BOLD, 15));
        HBox hRight = new HBox(reportL);
        hRight.setAlignment(Pos.CENTER_RIGHT);
        hRight.setPadding(new Insets(25.0,25.0,25.0,25.0));

        HBox bar = new HBox(hRight);
        bar.setBackground(new Background(new BackgroundFill(Color.DODGERBLUE, CornerRadii.EMPTY, Insets.EMPTY)));
        AnchorPane.setTopAnchor(bar, 0.0);
        AnchorPane.setLeftAnchor(bar, 0.0);
        AnchorPane.setRightAnchor(bar, 0.0);
        bar.setPrefHeight(60.0);

        HBox children = new HBox(100.0);
        children.getChildren().addAll(genReport, gridPane);
        AnchorPane.setTopAnchor(children, 100.0);
        AnchorPane.setLeftAnchor(children, 20.0);

        root.getChildren().addAll(bar, children);

        return root;
    }

    public void editBusinessInformation(){
        AnchorPane root = new AnchorPane();
        Stage window = new Stage(StageStyle.UTILITY);
        window.initModality(Modality.APPLICATION_MODAL);

        GridPane grid = new GridPane();
        grid.setVgap(12.0);
        grid.setHgap(12.0);
        grid.setPadding(new Insets(20.0,20.0,20.0,20.0));

        Label name = new Label("Name");
        name.setFont(Font.font(18.0));
        grid.add(name, 0,0);
        TextField nameF = new TextField(database.getBusinessInfo().get(0));
        nameF.setFont(Font.font(18.0));
        grid.add(nameF, 1,0);

        Label tagline = new Label("Tagline");
        tagline.setFont(Font.font(18.0));
        grid.add(tagline, 0,1);
        TextArea taglineF = new TextArea(database.getBusinessInfo().get(1));
        taglineF.setFont(Font.font(18.0));
        grid.add(taglineF, 1,1);
        taglineF.setPrefRowCount(2);
        taglineF.setPrefColumnCount(2);

        Label address = new Label("Address");
        address.setFont(Font.font(18.0));
        grid.add(address, 0,2);
        TextArea addressF = new TextArea(database.getBusinessInfo().get(2));
        addressF.setPrefRowCount(2);
        addressF.setPrefColumnCount(2);
        addressF.setFont(Font.font(18.0));
        grid.add(addressF, 1,2);

        Label tel = new Label("Tel");
        tel.setFont(Font.font(18.0));
        grid.add(tel, 0,3);
        TextField telF = new TextField(database.getBusinessInfo().get(3));
        telF.setFont(Font.font(18.0));
        grid.add(telF,1,3);

        Button update = new Button("UPDATE");
        update.setFont(Font.font(20.0));
        grid.add(update, 1,4);
        update.setOnAction((e) -> {
            if (database.updateBusinessInfo(nameF.getText(), taglineF.getText(), addressF.getText(), telF.getText())){
                dialog.showDialog("Success", "Successfully updated "+nameF.getText()+" details");
                window.close();
            }
        });
        root.getChildren().add(grid);
        Scene scene = new Scene(root, 410,400,true);
        window.setScene(scene);
        window.setResizable(false);
        window.setTitle("Edit "+database.getBusinessInfo().get(0));
        window.showAndWait();
    }
}
